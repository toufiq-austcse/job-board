definitions:
  api_response.Response:
    properties:
      code:
        description: This is Name
        type: integer
      data:
        type: object
      errors:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
  req.CreateJobReqModel:
    properties:
      apply_to:
        type: string
      description:
        type: string
      taxonomies:
        items:
          type: integer
        type: array
      title:
        type: string
    required:
    - apply_to
    - description
    - taxonomies
    - title
    type: object
  req.LoginReqModel:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  req.SignUpReqModel:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  res.CompanyInfo:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  res.JobRes:
    properties:
      apply_to:
        type: string
      description:
        type: string
      id:
        type: integer
      taxonomies:
        items:
          $ref: '#/definitions/res.JobTaxonomy'
        type: array
      title:
        type: string
    type: object
  res.JobTaxonomy:
    properties:
      id:
        type: integer
      slug:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  res.LoginResModel:
    properties:
      company_info:
        $ref: '#/definitions/res.CompanyInfo'
        type: object
      token:
        $ref: '#/definitions/res.Token'
        type: object
    type: object
  res.SignUpResModel:
    properties:
      company_info:
        $ref: '#/definitions/res.CompanyInfo'
        type: object
      token:
        $ref: '#/definitions/res.Token'
        type: object
    type: object
  res.TaxonomyInListRes:
    properties:
      id:
        type: integer
      slug:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  res.Token:
    properties:
      access_token:
        type: string
      expire_at:
        type: integer
    type: object
  res.TokenVerificationRes:
    properties:
      email:
        type: string
      established:
        type: string
      industry:
        type: string
      location:
        type: string
      logo_url:
        type: string
      name:
        type: string
      size:
        type: string
      website_url:
        type: string
    type: object
info:
  contact: {}
  license: {}
paths:
  /:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Health Check
      tags:
      - Index
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login Req Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/req.LoginReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.LoginResModel'
              type: object
      summary: Company Login
      tags:
      - Auth
  /api/v1/auth/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.TokenVerificationRes'
              type: object
      security:
      - Authorization: []
      summary: Token Verification
      tags:
      - Auth
  /api/v1/auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Signup Req Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/req.SignUpReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.SignUpResModel'
              type: object
      summary: Company SignUp
      tags:
      - Auth
  /api/v1/jobs:
    post:
      consumes:
      - application/json
      parameters:
      - description: Signup Req Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/req.CreateJobReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.JobRes'
              type: object
      security:
      - Authorization: []
      summary: Create New Job
      tags:
      - Jobs
  /api/v1/taxonomies:
    get:
      consumes:
      - application/json
      parameters:
      - description: list taxonomies by category
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/res.TaxonomyInListRes'
                  type: array
              type: object
      summary: Get taxonomies
      tags:
      - Taxonomy
securityDefinitions:
  Authorization:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
