definitions:
  api_response.PaginationResponse:
    properties:
      current_page:
        type: integer
      items_per_page:
        type: integer
      total_items:
        type: integer
      total_page:
        type: integer
    type: object
  api_response.Response:
    properties:
      code:
        description: This is Name
        type: integer
      data: {}
      errors:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
  api_response.ResponseWithPagination:
    properties:
      code:
        description: This is Name
        type: integer
      data: {}
      errors:
        items:
          type: string
        type: array
      message:
        type: string
      pagination:
        $ref: '#/definitions/api_response.PaginationResponse'
    type: object
  req.CreateJobReqModel:
    properties:
      apply_to:
        type: string
      description:
        type: string
      taxonomies:
        items:
          type: integer
        type: array
      title:
        type: string
    required:
    - apply_to
    - description
    - taxonomies
    - title
    type: object
  req.LoginReqModel:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  req.SignUpReqModel:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  req.UpdateCompanyReqModel:
    properties:
      culture_description:
        type: string
      description:
        type: string
      established:
        type: string
      hiring_description:
        type: string
      industry:
        type: string
      location:
        type: string
      logo_url:
        type: string
      name:
        type: string
      size:
        type: string
      website_url:
        type: string
    type: object
  res.CompanyDetailsRes:
    properties:
      culture_description:
        type: string
      description:
        type: string
      email:
        type: string
      established:
        type: string
      hiring_description:
        type: string
      industry:
        type: string
      location:
        type: string
      logo_url:
        type: string
      name:
        type: string
      size:
        type: string
      slug:
        type: string
      website_url:
        type: string
    type: object
  res.CompanyInfo:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
  res.JobCompany:
    properties:
      location:
        type: string
      logo_url:
        type: string
      name:
        type: string
    type: object
  res.JobCompanyInJobDetails:
    properties:
      location:
        type: string
      logo_url:
        type: string
      name:
        type: string
      slug:
        type: string
      website_url:
        type: string
    type: object
  res.JobDetailsRes:
    properties:
      apply_to:
        type: string
      company:
        $ref: '#/definitions/res.JobCompanyInJobDetails'
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      is_mine:
        type: boolean
      slug:
        type: string
      status:
        type: string
      taxonomies:
        items:
          $ref: '#/definitions/res.JobTaxonomy'
        type: array
      title:
        type: string
      updated_at:
        type: string
    type: object
  res.JobInListJobRes:
    properties:
      company:
        $ref: '#/definitions/res.JobCompany'
      created_at:
        type: string
      id:
        type: integer
      slug:
        type: string
      status:
        type: string
      taxonomies:
        items:
          $ref: '#/definitions/res.JobTaxonomy'
        type: array
      title:
        type: string
      updated_at:
        type: string
    type: object
  res.JobTaxonomy:
    properties:
      id:
        type: integer
      slug:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  res.LoginResModel:
    properties:
      company_info:
        $ref: '#/definitions/res.CompanyInfo'
      token:
        $ref: '#/definitions/res.Token'
    type: object
  res.SignUpResModel:
    properties:
      company_info:
        $ref: '#/definitions/res.CompanyInfo'
      token:
        $ref: '#/definitions/res.Token'
    type: object
  res.TaxonomyInListRes:
    properties:
      id:
        type: integer
      slug:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  res.Token:
    properties:
      access_token:
        type: string
      expire_at:
        type: integer
    type: object
  res.TokenVerificationRes:
    properties:
      email:
        type: string
      established:
        type: string
      industry:
        type: string
      location:
        type: string
      logo_url:
        type: string
      name:
        type: string
      size:
        type: string
      slug:
        type: string
      website_url:
        type: string
    type: object
info:
  contact: {}
paths:
  /:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Health Check
      tags:
      - Index
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login Req Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/req.LoginReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.LoginResModel'
              type: object
      summary: Company Login
      tags:
      - Auth
  /api/v1/auth/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.TokenVerificationRes'
              type: object
      security:
      - Authorization: []
      summary: Token Verification
      tags:
      - Auth
  /api/v1/auth/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Signup Req Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/req.SignUpReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.SignUpResModel'
              type: object
      summary: Company SignUp
      tags:
      - Auth
  /api/v1/companies/{slug}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Company Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.CompanyDetailsRes'
              type: object
      summary: Company Details
      tags:
      - Company
    patch:
      consumes:
      - application/json
      parameters:
      - description: Company Slug
        in: path
        name: slug
        required: true
        type: string
      - description: Signup Req Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/req.UpdateCompanyReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.CompanyDetailsRes'
              type: object
      security:
      - Authorization: []
      summary: Update Company Details
      tags:
      - Company
  /api/v1/companies/{slug}/jobs:
    get:
      consumes:
      - application/json
      parameters:
      - description: Company Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ResponseWithPagination'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/res.JobInListJobRes'
                  type: array
              type: object
      summary: List Jobs By Company
      tags:
      - Company
  /api/v1/jobs:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: status
        type: string
      - in: query
        name: taxonomy_slug
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api_response.ResponseWithPagination'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/res.JobInListJobRes'
                  type: array
              type: object
      security:
      - Authorization: []
      summary: List Jobs
      tags:
      - Jobs
    post:
      consumes:
      - application/json
      parameters:
      - description: Signup Req Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/req.CreateJobReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.JobDetailsRes'
              type: object
      security:
      - Authorization: []
      summary: Create New Job
      tags:
      - Jobs
  /api/v1/jobs/{slug}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Job Slug
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  $ref: '#/definitions/res.JobDetailsRes'
              type: object
      security:
      - Authorization: []
      summary: Get Job Details
      tags:
      - Jobs
  /api/v1/taxonomies:
    get:
      consumes:
      - application/json
      parameters:
      - description: list taxonomies by category
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api_response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/res.TaxonomyInListRes'
                  type: array
              type: object
      summary: Get taxonomies
      tags:
      - Taxonomy
securityDefinitions:
  Authorization:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
